hajp.init.start="HAJP starting..."
hajp.init.post.initialize="Post-Initialization after jenkins start."

cluster.joined=JOINED
cluster.disconnected=DISCONNECTED
cluster.activemaster=Active Master
cluster.hotstandby=Hot Standby

cluster.extension.hotstandby.causeofblockage="This Jenkins instance is acting as a Hot Standby. Builds are not permitted."
cluster.sender.send="Send a message for replication: content={0}"

cluster.listener.on.received="onReceive message={0}."
cluster.listener.on.received.member.up="onReceive: member={0} is up."
cluster.listener.on.received.member.unreachable="onReceive: member={0} detected as unreachable."
cluster.listener.on.received.member.removed="onReceive: member={0} is removed."
cluster.listener.on.received.member.event="onReceive: member event={0}."
cluster.listener.on.received.leader.changed="onReceive: leader changed to new leader={0}."
cluster.listener.on.received.forward.message="onReceive: forwarding the received message={0}."
cluster.listener.on.received.bytes.message="onReceive: bytes message."
cluster.listener.on.received.unhandled.message="onReceive: unhandled message={0}."
cluster.listener.on.received.forward.message.to.member="onReceive: forward the message={0} to member={1}."
cluster.listener.on.received.process.message="onReceive: processing the message={0}."
cluster.listener.on.received.orchestrator.connected="onReceive: connected orchestrator address is {0}."
cluster.listener.on.received.orchestrator.disconnected="onReceive: disconnected orchestrator - {0}. Will disconnect from cluster!"

sleep.interrupted="InterruptionException occurred during the thread sleep... continue"

jobs.process="Process the message={0}."
jobs.process.error="Caught an exception={0} while processing the message={2} for the job={1}."
jobs.process.error.invalid.job="Can not process an invalid message={0}."
jobs.process.error.send.jobs="Caught an exception={0} while sending the jobs."
jobs.process.error.reload.jobs="Caught an exception={0} while reloading jobs."
jobs.process.job.created="The job={0} from the received message has been created."
jobs.process.job.updated="The job={0} from the received message has been updated."
jobs.process.job.renamed="The job={0} from the received message has been renamed to {1}."
jobs.process.job.deleted="The job={0} from the received message has been deleted."
jobs.process.all.deleted="All jobs have been deleted."
jobs.process.all.sent="All jobs have been sent to {0}."
jobs.process.all.builds.sent="All builds of job={0} have been sent to {1}."
jobs.process.job.update.merge.error="Failed to merge the config.xml"

jobs.listener.on.created="onCreated job={0} => sending for replication."
jobs.listener.on.created.error="Failed to send the new job={0} for replication. Caught an Exception={1}."
jobs.listener.on.updated="onUpdated job={0} => sending for replication."
jobs.listener.on.updated.error="Failed to send the updated job={0} for replication. Caught an Exception={1}."
jobs.listener.on.renamed="onRenamed job={0} to {1} => sending for replication."
jobs.listener.on.renamed.error="Failed to send the renamed job={0} to {1} for replication."
jobs.listener.on.deleted="onDeleted job={0} => sending for replication."
jobs.listener.on.deleted.error="Failed to send the deleted job={0} for replication."

builds.process.build.error="Caught an exception={0} while processing the message={3} for the build={2} of the job={1}."
builds.process.build.created="The build={1} of job={0} from the received message has been created."
builds.process.build.created.error="Failed to create the new build={1} of job={0} from the received message. Caught an Exception={2}."
builds.process.build.deleted="The build={1} of job={0} from the received message has been created."
builds.process.build.deleted.error="Failed to delete the build={1} of job={0} from the received message. Caught an Exception={2}."
builds.process.build.create.existing="The build={1} of job={0} already exists but will be overriden."

builds.listener.on.finalized="onFinalized build={1} of job={0} => sending for replication."
builds.listener.on.finalized.error="Failed to send the new build={1} of job={0} for replication. Caught an Exception={2}."
builds.listener.on.deleted="completed build={1} of job={0} => sending for replication."
builds.listener.on.deleted.error="Failed to send the new build={1} of job={0} for replication. Caught an Exception={2}."
